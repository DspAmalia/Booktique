@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.WebUtilities

@inject IDbContextFactory<BooktiqueContext> DbFactory
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Booktique</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <!-- 🧭 Meniul principal -->
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu"></span>🏠 Home
            </NavLink>
        </div>
     
        <div class="nav-item px-3">
             <NavLink class="nav-link" href="/favorites">
                <span class="bi bi-heart-fill-nav-menu"></span>❤️ Favorites
             </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/ask-ai">
                <span class="bi bi-heart-fill-nav-menu"></span>🧠 Booktique AI
            </NavLink>
        </div>

        @* <AuthorizeView Roles="Administrator">
            <Authorized>
            </Authorized>
        </AuthorizeView> *@
    </nav>

    <!-- 🔎 Filtre în navbar -->
    <div class="filters-navbar px-3 py-2">
        <h5 class="fw-bold mb-2 text-light">Filters</h5>

        <label for="category-select" class="text-light">Category</label>
        <InputSelect id="category-select"
                     @bind-Value="SelectedCategory"
                     class="form-select form-select-sm mb-2">
            <option value="">All Categories</option>
            @foreach (var cat in categories)
            {
                <option value="@cat">@cat</option>
            }
        </InputSelect>

        <label for="year-select" class="text-light">Year</label>
        <InputSelect id="year-select"
                     @bind-Value="SelectedYear"
                     class="form-select form-select-sm mb-3">
            <option value="">All Years</option>
            @foreach (var y in years)
            {
                <option value="@y">@y</option>
            }
        </InputSelect>

        <button class="btn btn-sm btn-outline-light w-100"
                @onclick="ResetFilters">
            Clear Filters
        </button>
    </div>
</div>

@code {
    private List<string> categories = new();
    private List<string> years = new();

    private string selectedCategory = string.Empty;
    private string selectedYear = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        using var ctx = DbFactory.CreateDbContext();

        categories = await ctx.Book
            .Select(b => b.BookCategory)
            .Distinct()
            .OrderBy(c => c)
            .ToListAsync();

        years = await ctx.Book
            .Select(b => b.BookYear.ToString())
            .Distinct()
            .OrderByDescending(y => y)
            .ToListAsync();

        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);

        if (query.TryGetValue("category", out var cat))
            selectedCategory = cat;
        if (query.TryGetValue("year", out var yr))
            selectedYear = yr;
    }

    private string SelectedCategory
    {
        get => selectedCategory;
        set
        {
            selectedCategory = value;
            NavigateWithFilters();
        }
    }

    private string SelectedYear
    {
        get => selectedYear;
        set
        {
            selectedYear = value;
            NavigateWithFilters();
        }
    }

    private void NavigateWithFilters()
    {
        var query = new List<string>();
        if (!string.IsNullOrEmpty(selectedCategory))
            query.Add($"category={Uri.EscapeDataString(selectedCategory)}");
        if (!string.IsNullOrEmpty(selectedYear))
            query.Add($"year={Uri.EscapeDataString(selectedYear)}");

        var url = query.Any() ? $"/?{string.Join("&", query)}" : "/";

        // 🔥 Forcează reîncărcarea paginii
        NavigationManager.NavigateTo(url, forceLoad: true);
    }


    private void ResetFilters()
    {
        selectedCategory = string.Empty;
        selectedYear = string.Empty;
        NavigationManager.NavigateTo("/",forceLoad: true);
    }

}
